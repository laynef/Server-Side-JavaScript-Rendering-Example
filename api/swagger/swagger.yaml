swagger: "2.0"
info:
  version: "0.0.1"
  title: RENS Framework
# during dev, should point to your local machine
host: localhost:8325
# basePath prefixes all resource paths
basePath: /api/v1
#
schemes:
  # tip: remove http to make production-grade
  - http
  # - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /get/token/{id}:
    get:
      description: Returns json token
      parameters:
        - in: path
          name: id
          description: user id
          type: string
          required: true
      responses:
        "200":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/local/login:
    post:
      description: Returns user information
      parameters:
        - name: RequestBody
          in: body
          description: User's email required
          required: true
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        "201":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: Wrong password for that user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/local/logout/{id}:
    get:
      description: Logouts user
      operationId: logout user by id
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: user logout response
          schema:
            $ref: '#/definitions/SuccessResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/local/register/visitor:
    post:
      description: Creates and returns user information
      parameters:
        - name: RequestBody
          in: body
          description: Creates visitor user permissions
          required: true
          schema:
            type: object
            required:
              - email
              - password
              - firstName
              - lastName
            properties:
              email:
                type: string
              password:
                type: string
              firstName:
                type: string
              lastName:
                type: string
      responses:
        "201":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/local/register/admin:
    post:
      description: Creates and returns user information
      parameters:
        - name: RequestBody
          in: body
          description: Creates admin user permissions
          required: true
          schema:
            type: object
            required:
              - email
              - password
              - firstName
              - lastName
            properties:
              email:
                type: string
              password:
                type: string
              firstName:
                type: string
              lastName:
                type: string
      responses:
        "201":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/local/register/guest:
    post:
      description: Creates and returns user information
      parameters:
        - name: RequestBody
          in: body
          description: Creates guest user permissions
          required: true
          schema:
            type: object
            required:
              - email
              - password
              - firstName
              - lastName
            properties:
              email:
                type: string
              password:
                type: string
              firstName:
                type: string
              lastName:
                type: string
      responses:
        "201":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /auth/local/change/password/{id}:
    patch:
      description: Changes users password
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
        - name: RequestBody
          in: body
          description: Creates guest user permissions
          required: true
          schema:
            type: object
            required:
              - newPassword
              - password
            properties:
              newPassword:
                type: string
              password:
                type: string
      responses:
        "202":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "400":
          description: wrong password
          schema:
            $ref: '#/definitions/ErrorResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /album/{id}:
    get:
      description: Get full album data
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of album to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /notification/{id}:
    get:
      description: Get full notification for user data
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /album:
    post:
      description: Create album
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: RequestBody
          in: body
          description: Creates album without any files
          required: true
          schema:
            type: object
            required:
              - name
            properties:
              name:
                type: string
      responses:
        "201":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /profile/{id}:
    get:
      description: Get user profile
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: Creates album without any files
          required: true
          type: integer
          format: int64
      responses:
        "201":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      description: Update user profile
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: Creates album without any files
          required: true
          type: integer
          format: int64
        - name: RequestBody
          in: body
          description: Updates profile data
          required: true
          schema:
            type: object
            required:
              - firstName
              - lastName
              - image
            properties:
              firstName:
                type: string
              lastName:
                type: string
              image:
                type: string
      responses:
        "202":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /images/album/{albumId}/user/{userId}:
    post:
      description: Upload images
      consumes:
        - multipart/form-data
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: albumId
          in: path
          description: ID of album to fetch
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
        - name: file
          in: formData
          description: Url path
          required: true
          type: file
      responses:
        "201":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /audio/album/{albumId}/user/{userId}:
    post:
      description: Upload audio
      consumes:
        - multipart/form-data
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: albumId
          in: path
          description: ID of album to fetch
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
        - name: file
          in: formData
          description: Url path
          required: true
          type: file
      responses:
        "201":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /video/album/{albumId}/user/{userId}:
    post:
      description: Upload video
      consumes:
        - multipart/form-data
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: albumId
          in: path
          description: ID of album to fetch
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
        - name: file
          in: formData
          description: Url path
          required: true
          type: file
      responses:
        "201":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /chat/{id}:
    get:
      description: Get full chat thread
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of user to fetch
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /chat:
    post:
      description: Get full chat thread
      parameters:
        - in: header
          description: Needed web token and user id
          name: Authorization
          required: true
          type: string
        - in: header
          description: Needed user id
          name: User
          required: true
          type: integer
          format: int64
        - name: RequestBody
          in: body
          description: Creates guest user permissions
          required: true
          schema:
            type: object
            required:
              - userId
              - threadId
              - text
            properties:
              userId:
                type: integer
              threadId:
                type: integer
              text:
                type: string
      responses:
        "201":
          description: logged in user object returned
          schema:
            $ref: '#/definitions/SuccessResponse'
        "403":
          description: Authorization user
          schema:
            $ref: '#/definitions/ErrorResponse'
        "404":
          description: fetch user error
          schema:
            $ref: '#/definitions/ErrorResponse'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
